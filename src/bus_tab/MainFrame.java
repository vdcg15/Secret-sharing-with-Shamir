package bus_tab;

import java.io.File;
import java.math.BigInteger;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author VDC
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame()	{
	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jFileChooserFilesZip = new javax.swing.JFileChooser();
        jFileChooserDst = new javax.swing.JFileChooser();
        jFileChooserFilesUnzip = new javax.swing.JFileChooser();
        jFileChooserDecryptKey = new javax.swing.JFileChooser();
        jFileChooserKeysToExtract = new javax.swing.JFileChooser();
        jTabbedPaneMain = new javax.swing.JTabbedPane();
        jPanelZip = new javax.swing.JPanel();
        jButtonBrowseFilesZip = new javax.swing.JButton();
        jButtonOKZip = new javax.swing.JButton();
        jButtonClearZip = new javax.swing.JButton();
        jTextFieldBrowseFilesZip = new javax.swing.JTextField();
        jTextFieldDivKeysZip = new javax.swing.JTextField();
        jTextFieldReqKeysZip = new javax.swing.JTextField();
        labelPwd = new java.awt.Label();
        labelDivKeys = new java.awt.Label();
        labelReqKeysZip = new java.awt.Label();
        labelAlgorithmZip = new java.awt.Label();
        labelFilesZip = new java.awt.Label();
        jPasswordFieldPwdZip = new javax.swing.JPasswordField();
        jComboBoxAlgorithmZip = new javax.swing.JComboBox<>();
        labelNameZip = new java.awt.Label();
        jTextFieldNameZip = new javax.swing.JTextField();
        jPanelUnzip = new javax.swing.JPanel();
        jButtonBrowseFileUnzip = new javax.swing.JButton();
        jButtonBrowseDst = new javax.swing.JButton();
        jButtonClearUnzip = new javax.swing.JButton();
        jButtonOKUnzip = new javax.swing.JButton();
        jButtonBrowseDecryptKey = new javax.swing.JButton();
        jTextFieldBrowseFileUnzip = new javax.swing.JTextField();
        jTextFieldBrowseDst = new javax.swing.JTextField();
        jTextFieldDecryptKey = new javax.swing.JTextField();
        jTextFieldKeysToExtract = new javax.swing.JTextField();
        labelAlgorithmUnzip = new java.awt.Label();
        labelFileUnzip = new java.awt.Label();
        labelExtractTo = new java.awt.Label();
        labelDecryptKey = new java.awt.Label();
        labelKeysToExtract = new java.awt.Label();
        jComboBoxAlgorithmUnzip = new javax.swing.JComboBox<>();
        jButtonBrowseKeysToExtract = new javax.swing.JButton();

        jFileChooserFilesZip.setCurrentDirectory(new java.io.File("D:\\Java\\BUS_NB\\test"));
        jFileChooserFilesZip.setDialogTitle("");
        jFileChooserFilesZip.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooserFilesZip.setMultiSelectionEnabled(true);

        jFileChooserDst.setCurrentDirectory(new java.io.File("D:\\Java\\BUS_NB\\test"));
        jFileChooserDst.setDialogTitle("");
        jFileChooserDst.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        jFileChooserFilesUnzip.setCurrentDirectory(new java.io.File("D:\\Java\\BUS_NB\\test"));
        jFileChooserFilesUnzip.setDialogTitle("Select files added to archive");
        jFileChooserFilesUnzip.setFileFilter(new MyCustomFilterZip());
        jFileChooserFilesUnzip.setToolTipText("");
        jFileChooserFilesUnzip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jFileChooserFilesUnzipActionPerformed(evt);
            }
        });

        jFileChooserDecryptKey.setCurrentDirectory(new java.io.File("D:\\Java\\BUS_NB\\test"));
        jFileChooserDecryptKey.setFileFilter(new MyCustomFilterText());

        jFileChooserKeysToExtract.setCurrentDirectory(new java.io.File("D:\\Java\\BUS_NB\\test"));
        jFileChooserKeysToExtract.setFileFilter(new MyCustomFilterText());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BUS Shamir");
        setResizable(false);

        jTabbedPaneMain.setName(""); // NOI18N

        jPanelZip.setPreferredSize(new java.awt.Dimension(515, 146));

        jButtonBrowseFilesZip.setText("Browse");
        jButtonBrowseFilesZip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonBrowseFilesZipActionPerformed(evt);
            }
        });

        jButtonOKZip.setText("OK");
        jButtonOKZip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonOKZipActionPerformed(evt);
            }
        });

        jButtonClearZip.setText("Clear");
        jButtonClearZip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonClearZipActionPerformed(evt);
            }
        });

        jTextFieldDivKeysZip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldDivKeysZipActionPerformed(evt);
            }
        });

        jTextFieldReqKeysZip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldReqKeysZipActionPerformed(evt);
            }
        });

        labelPwd.setText("Password");

        labelDivKeys.setText("Divided keys (n)");

        labelReqKeysZip.setText("Required keys (k)");

        labelAlgorithmZip.setText("Algorithm");

        labelFilesZip.setText("File(s)");

        jPasswordFieldPwdZip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jPasswordFieldPwdZipActionPerformed(evt);
            }
        });

        jComboBoxAlgorithmZip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "DES", "AES", "RC2", "IDEA", "Triple DES", "Blowfish" }));
        jComboBoxAlgorithmZip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBoxAlgorithmZipActionPerformed(evt);
            }
        });

        labelNameZip.setText("Name of ZIP");

        jTextFieldNameZip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldNameZipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelZipLayout = new javax.swing.GroupLayout(jPanelZip);
        jPanelZip.setLayout(jPanelZipLayout);
        jPanelZipLayout.setHorizontalGroup(
            jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelZipLayout.createSequentialGroup()
                .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelZipLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFilesZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDivKeys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAlgorithmZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNameZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelZipLayout.createSequentialGroup()
                                .addComponent(jTextFieldBrowseFilesZip, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonBrowseFilesZip, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldNameZip, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanelZipLayout.createSequentialGroup()
                                    .addComponent(jTextFieldDivKeysZip)
                                    .addGap(69, 69, 69)
                                    .addComponent(labelReqKeysZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldReqKeysZip, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jPasswordFieldPwdZip, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBoxAlgorithmZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelZipLayout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jButtonOKZip, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonClearZip, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanelZipLayout.setVerticalGroup(
            jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelZipLayout.createSequentialGroup()
                .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldBrowseFilesZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelFilesZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonBrowseFilesZip)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordFieldPwdZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPwd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDivKeysZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDivKeys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelReqKeysZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldReqKeysZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxAlgorithmZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAlgorithmZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNameZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNameZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelZipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOKZip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonClearZip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );

        jTabbedPaneMain.addTab("Zip", jPanelZip);

        jPanelUnzip.setPreferredSize(new java.awt.Dimension(515, 193));

        jButtonBrowseFileUnzip.setText("Browse");
        jButtonBrowseFileUnzip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonBrowseFileUnzipActionPerformed(evt);
            }
        });
        jButtonBrowseFileUnzip.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jButtonBrowseFileUnzipKeyPressed(evt);
            }
        });

        jButtonBrowseDst.setText("Browse");
        jButtonBrowseDst.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonBrowseDstActionPerformed(evt);
            }
        });

        jButtonClearUnzip.setText("Clear");
        jButtonClearUnzip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonClearUnzipActionPerformed(evt);
            }
        });

        jButtonOKUnzip.setText("OK");
        jButtonOKUnzip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonOKUnzipActionPerformed(evt);
            }
        });

        jButtonBrowseDecryptKey.setText("Browse");
        jButtonBrowseDecryptKey.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonBrowseDecryptKeyActionPerformed(evt);
            }
        });

        jTextFieldBrowseFileUnzip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldBrowseFileUnzipActionPerformed(evt);
            }
        });

        labelAlgorithmUnzip.setText("Algorithm");

        labelFileUnzip.setText("ZIP file");

        labelExtractTo.setText("Extract to");

        labelDecryptKey.setText("Decrypting key");

        labelKeysToExtract.setText("Keys to extract");

        jComboBoxAlgorithmUnzip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "DES", "AES", "RC2", "IDEA", "Triple DES", "Blowfish" }));
        jComboBoxAlgorithmUnzip.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBoxAlgorithmUnzipActionPerformed(evt);
            }
        });

        jButtonBrowseKeysToExtract.setText("Browse");
        jButtonBrowseKeysToExtract.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonBrowseKeysToExtractActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelUnzipLayout = new javax.swing.GroupLayout(jPanelUnzip);
        jPanelUnzip.setLayout(jPanelUnzipLayout);
        jPanelUnzipLayout.setHorizontalGroup(
            jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUnzipLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUnzipLayout.createSequentialGroup()
                        .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFileUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelExtractTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelKeysToExtract, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAlgorithmUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDecryptKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelUnzipLayout.createSequentialGroup()
                                .addComponent(jComboBoxAlgorithmUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelUnzipLayout.createSequentialGroup()
                                .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldDecryptKey, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldBrowseDst)
                                    .addComponent(jTextFieldBrowseFileUnzip)
                                    .addComponent(jTextFieldKeysToExtract, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButtonBrowseFileUnzip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonBrowseDst, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonBrowseKeysToExtract, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButtonBrowseDecryptKey, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(jPanelUnzipLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jButtonOKUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonClearUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(194, Short.MAX_VALUE))))
        );
        jPanelUnzipLayout.setVerticalGroup(
            jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUnzipLayout.createSequentialGroup()
                .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldBrowseFileUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonBrowseFileUnzip))
                    .addComponent(labelFileUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUnzipLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(labelExtractTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelKeysToExtract, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldKeysToExtract, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonBrowseKeysToExtract))))
                    .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldBrowseDst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonBrowseDst)))
                .addGap(6, 6, 6)
                .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxAlgorithmUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAlgorithmUnzip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldDecryptKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonBrowseDecryptKey))
                    .addComponent(labelDecryptKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelUnzipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonOKUnzip)
                    .addComponent(jButtonClearUnzip))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPaneMain.addTab("Unzip", jPanelUnzip);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBrowseFilesZipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonBrowseFilesZipActionPerformed
    {//GEN-HEADEREND:event_jButtonBrowseFilesZipActionPerformed
	// TODO add your handling code here:
	int returnVal = jFileChooserFilesZip.showOpenDialog(this);
	if (returnVal == JFileChooser.APPROVE_OPTION) {
	    filesZip = jFileChooserFilesZip.getSelectedFiles();
	    //pathZip = jFileChooserFilesZip.getCurrentDirectory().toString() + nameZip + ".zip";

	    //try {
	    // What to do with the file, e.g. display it in a TextArea
	    int length = filesZip.length;
	    String temp = filesZip[0].toString();

	    for (int i = 1; i < length; i++) {
		temp += ", " + filesZip[i].toString();
	    }

	    jTextFieldBrowseFilesZip.setText(temp);
	    //} catch (IOException ex)
	    /*{
	      System.out.println("Problem accessing file. \n" + files.getAbsolutePath());
	    }*/
	} else {
	    System.out.println("File access cancelled by user. \n");
	}
    }//GEN-LAST:event_jButtonBrowseFilesZipActionPerformed

    private void jButtonOKZipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonOKZipActionPerformed
    {//GEN-HEADEREND:event_jButtonOKZipActionPerformed
	// TODO add your handling code here:
	try {
	    n = Integer.parseInt(jTextFieldDivKeysZip.getText());
	    kZip = Integer.parseInt(jTextFieldReqKeysZip.getText());
	    passwordZip = new String(jPasswordFieldPwdZip.getPassword());
	    nameZip = jTextFieldNameZip.getText();
	    algorithmZip = String.valueOf(jComboBoxAlgorithmZip.getSelectedItem());

	    if (algorithmZip.compareTo("Select") == 0) {
		JOptionPane.showMessageDialog(null,
			"Select algorithm to encrypt password!",
			"Warning", JOptionPane.WARNING_MESSAGE);
	    } else if (kZip >= n) {
		JOptionPane.showMessageDialog(null,
			"k must be smaller than n",
			"Warning", JOptionPane.WARNING_MESSAGE);
	    } else if ((filesZip.length == 0) || (passwordZip.length() == 0)
		    || (n == 0) || (kZip == 0) || (nameZip.length() == 0)) {
		JOptionPane.showMessageDialog(null,
			"Leak of information!",
			"Warning", JOptionPane.WARNING_MESSAGE);
	    } else {
		//passwordZip = new String(jPasswordFieldPwdZip.getPassword());
		//n = tempN;
		//kZip = tempK;
		//algorithmZip = tempAlgorithmZip;
		//nameZip = jTextFieldNameZip.getText();
		pathZip = jFileChooserFilesZip.getCurrentDirectory().toString() + "\\" + nameZip + ".zip";

		CutPwd cut = new CutPwd(passwordZip, n, kZip, algorithmZip);
		cut.cutPwd();
		System.out.println(kZip);
		System.out.println(n);
		ZipFiles zip = new ZipFiles(filesZip, pathZip, passwordZip);
		zip.setZip();
		//prime = cut.getPrime();	
		//Vector<Shared> shared = cut.getShared();
	    }
	} catch (NumberFormatException nfEx) {
	    nfEx.printStackTrace();
	    JOptionPane.showMessageDialog(null,
		    "n and k must be an integer.",
		    "Warning", JOptionPane.WARNING_MESSAGE);
	}
    }//GEN-LAST:event_jButtonOKZipActionPerformed

    private void jTextFieldDivKeysZipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldDivKeysZipActionPerformed
    {//GEN-HEADEREND:event_jTextFieldDivKeysZipActionPerformed
	// TODO add your handling code here:
	//String temp = jTextFieldDivKeysZip.getText();
	//n = Integer.parseInt(temp);
    }//GEN-LAST:event_jTextFieldDivKeysZipActionPerformed

    private void jTextFieldReqKeysZipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldReqKeysZipActionPerformed
    {//GEN-HEADEREND:event_jTextFieldReqKeysZipActionPerformed
	// TODO add your handling code here:
	//String temp = jTextFieldReqKeysZip.getText();
	//kZip = Integer.parseInt(temp);
    }//GEN-LAST:event_jTextFieldReqKeysZipActionPerformed

    private void jComboBoxAlgorithmZipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBoxAlgorithmZipActionPerformed
    {//GEN-HEADEREND:event_jComboBoxAlgorithmZipActionPerformed
	// TODO add your handling code here:
	//algorithmZip = String.valueOf(jComboBoxAlgorithmZip.getSelectedItem());
	//System.out.println(algorithmZip);
    }//GEN-LAST:event_jComboBoxAlgorithmZipActionPerformed

    private void jButtonBrowseFileUnzipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonBrowseFileUnzipActionPerformed
    {//GEN-HEADEREND:event_jButtonBrowseFileUnzipActionPerformed
	// TODO add your handling code here:
	int returnVal = jFileChooserFilesUnzip.showOpenDialog(this);
	if (returnVal == JFileChooser.APPROVE_OPTION) {
	    fileUnzip = jFileChooserFilesUnzip.getSelectedFile();

	    //try {
	    jTextFieldBrowseFileUnzip.setText(fileUnzip.toString());
	    /*} catch (IOException ex) {
                System.out.println("Problem accessing file. \n" + file.getAbsolutePath());
            }*/
	} else {
	    System.out.println("File access cancelled by user. \n");
	}
    }//GEN-LAST:event_jButtonBrowseFileUnzipActionPerformed

    private void jButtonBrowseFileUnzipKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jButtonBrowseFileUnzipKeyPressed
    {//GEN-HEADEREND:event_jButtonBrowseFileUnzipKeyPressed
	// TODO add your handling code here:
    }//GEN-LAST:event_jButtonBrowseFileUnzipKeyPressed

    private void jButtonBrowseDstActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonBrowseDstActionPerformed
    {//GEN-HEADEREND:event_jButtonBrowseDstActionPerformed
	// TODO add your handling code here:
	int returnVal = jFileChooserDst.showOpenDialog(this);
	if (returnVal == JFileChooser.APPROVE_OPTION) {
	    fileDst = jFileChooserDst.getSelectedFile();

	    //try {
	    jTextFieldBrowseDst.setText(fileDst.toString());
	    /*} catch (IOException ex) {
                System.out.println("Problem accessing file. \n" + file.getAbsolutePath());
            }*/
	} else {
	    System.out.println("File access cancelled by user. \n");
	}
    }//GEN-LAST:event_jButtonBrowseDstActionPerformed

    private void jButtonOKUnzipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonOKUnzipActionPerformed
    {//GEN-HEADEREND:event_jButtonOKUnzipActionPerformed
	// TODO add your handling code here:
	algorithmUnzip = String.valueOf(jComboBoxAlgorithmUnzip.getSelectedItem());

	if (algorithmUnzip.compareTo("Select") == 0) {
	    JOptionPane.showMessageDialog(null, "Select algorithm to decrypt password!", 
		    "Warning", JOptionPane.WARNING_MESSAGE);
	}
	else if ((fileUnzip.length() == 0) || (fileDst.length() == 0)
		|| (fileKeysToExtract.length() == 0) || (fileDecryptKey.length() == 0))	{
	    JOptionPane.showMessageDialog(null, "Leak of information!", 
		    "Warning", JOptionPane.WARNING_MESSAGE);
	} else {
	    //algorithmUnzip = tempAlgorithmUnzip;
	    CombineKeys combine = new CombineKeys(fileKeysToExtract, fileDecryptKey, algorithmUnzip);
	    passwordUnzip = combine.findPwd();

	    UnzipFile unzip = new UnzipFile(fileUnzip.toString(), fileDst.toString(), passwordUnzip);
	    unzip.extract();
	}
    }//GEN-LAST:event_jButtonOKUnzipActionPerformed

    private void jComboBoxAlgorithmUnzipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBoxAlgorithmUnzipActionPerformed
    {//GEN-HEADEREND:event_jComboBoxAlgorithmUnzipActionPerformed
	// TODO add your handling code here:
	//algorithmUnzip = String.valueOf(jComboBoxAlgorithmZip.getSelectedItem());
    }//GEN-LAST:event_jComboBoxAlgorithmUnzipActionPerformed

    private void jPasswordFieldPwdZipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jPasswordFieldPwdZipActionPerformed
    {//GEN-HEADEREND:event_jPasswordFieldPwdZipActionPerformed
	// TODO add your handling code here:
	//passwordZip = new String(jPasswordFieldPwdZip.getPassword());
    }//GEN-LAST:event_jPasswordFieldPwdZipActionPerformed

    private void jButtonBrowseDecryptKeyActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonBrowseDecryptKeyActionPerformed
    {//GEN-HEADEREND:event_jButtonBrowseDecryptKeyActionPerformed
	// TODO add your handling code here:
	int returnVal = jFileChooserDecryptKey.showOpenDialog(this);
	if (returnVal == JFileChooser.APPROVE_OPTION) {
	    fileDecryptKey = jFileChooserDecryptKey.getSelectedFile();

	    //try {
	    jTextFieldDecryptKey.setText(fileDecryptKey.toString());
	    /*} catch (IOException ex) {
                System.out.println("Problem accessing file. \n" + file.getAbsolutePath());
            }*/
	} else {
	    System.out.println("File access cancelled by user. \n");
	}
    }//GEN-LAST:event_jButtonBrowseDecryptKeyActionPerformed

    private void jTextFieldBrowseFileUnzipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldBrowseFileUnzipActionPerformed
    {//GEN-HEADEREND:event_jTextFieldBrowseFileUnzipActionPerformed
	// TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBrowseFileUnzipActionPerformed

    private void jButtonBrowseKeysToExtractActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonBrowseKeysToExtractActionPerformed
    {//GEN-HEADEREND:event_jButtonBrowseKeysToExtractActionPerformed
	// TODO add your handling code here:
	int returnVal = jFileChooserKeysToExtract.showOpenDialog(this);
	if (returnVal == JFileChooser.APPROVE_OPTION) {
	    fileKeysToExtract = jFileChooserKeysToExtract.getSelectedFile();

	    //try {
	    jTextFieldKeysToExtract.setText(fileKeysToExtract.toString());
	    /*} catch (IOException ex) {
                System.out.println("Problem accessing file. \n" + file.getAbsolutePath());
            }*/
	} else {
	    System.out.println("File access cancelled by user. \n");
	}
    }//GEN-LAST:event_jButtonBrowseKeysToExtractActionPerformed

    private void jFileChooserFilesUnzipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jFileChooserFilesUnzipActionPerformed
    {//GEN-HEADEREND:event_jFileChooserFilesUnzipActionPerformed
	// TODO add your handling code here:
    }//GEN-LAST:event_jFileChooserFilesUnzipActionPerformed

    private void jButtonClearZipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonClearZipActionPerformed
    {//GEN-HEADEREND:event_jButtonClearZipActionPerformed
	// TODO add your handling code here:
	filesZip = null;
	jTextFieldBrowseFilesZip.setText(null);

	passwordZip = null;
	jPasswordFieldPwdZip.setText(null);

	n = 0;
	jTextFieldDivKeysZip.setText(null);

	kZip = 0;
	jTextFieldReqKeysZip.setText(null);

	algorithmZip = null;
	jComboBoxAlgorithmZip.setSelectedIndex(0);

	nameZip = null;
	jTextFieldNameZip.setText(null);
    }//GEN-LAST:event_jButtonClearZipActionPerformed

    private void jButtonClearUnzipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonClearUnzipActionPerformed
    {//GEN-HEADEREND:event_jButtonClearUnzipActionPerformed
	// TODO add your handling code here:
	fileUnzip = null;
	jTextFieldBrowseFileUnzip.setText(null);

	fileDst = null;
	jTextFieldBrowseDst.setText(null);

	fileKeysToExtract = null;
	jTextFieldKeysToExtract.setText(null);

	algorithmUnzip = null;
	jComboBoxAlgorithmUnzip.setSelectedIndex(0);

	fileDecryptKey = null;
	jTextFieldDecryptKey.setText(null);
    }//GEN-LAST:event_jButtonClearUnzipActionPerformed

    private void jTextFieldNameZipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldNameZipActionPerformed
    {//GEN-HEADEREND:event_jTextFieldNameZipActionPerformed
	// TODO add your handling code here:
	//nameZip = jTextFieldNameZip.getText();
    }//GEN-LAST:event_jTextFieldNameZipActionPerformed

    private class MyCustomFilterZip extends javax.swing.filechooser.FileFilter {

	@Override
	public boolean accept(File file) {
	    // Allow only directories, or files with ".zip" extension
	    return file.isDirectory() || file.getAbsolutePath().endsWith(".zip");
	}

	@Override
	public String getDescription() {
	    // This description will be displayed in the dialog,
	    // hard-coded = ugly, should be done via I18N
	    return "Archived files (*.zip)";
	}
    }

    private class MyCustomFilterText extends javax.swing.filechooser.FileFilter {

	@Override
	public boolean accept(File file) {
	    // Allow only directories, or files with ".zip" extension
	    return file.isDirectory() || file.getAbsolutePath().endsWith(".txt");
	}

	@Override
	public String getDescription() {
	    // This description will be displayed in the dialog,
	    // hard-coded = ugly, should be done via I18N
	    return "Text files (*.txt)";
	}
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
	/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try
	{
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
	    {
		if ("Nimbus".equals(info.getName()))
		{
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	}
	catch (ClassNotFoundException ex)
	{
	    java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	catch (InstantiationException ex)
	{
	    java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	catch (IllegalAccessException ex)
	{
	    java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	catch (javax.swing.UnsupportedLookAndFeelException ex)
	{
	    java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(
	    new Runnable() {
		public void run() {
		    frame = new MainFrame();
		    frame.setResizable(false);
		    frame.setLocationRelativeTo(null);
		    frame.setVisible(true);
		    frame.pack();
		}
	    }
	);
    }

    private int n;
    private int kZip;
    private int kUnzip;
    private BigInteger prime;

    private String algorithmZip;
    private String algorithmUnzip;
    private String keyZip;
    private String keyUnzip;
    private String passwordZip;
    private String passwordUnzip;
    private String nameZip;
    private String pathZip;

    private File[] filesZip;
    private File fileUnzip;
    private File fileDst;
    private File fileKeysToExtract;
    private File fileDecryptKey;

    private static MainFrame frame;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowseDecryptKey;
    private javax.swing.JButton jButtonBrowseDst;
    private javax.swing.JButton jButtonBrowseFileUnzip;
    private javax.swing.JButton jButtonBrowseFilesZip;
    private javax.swing.JButton jButtonBrowseKeysToExtract;
    private javax.swing.JButton jButtonClearUnzip;
    private javax.swing.JButton jButtonClearZip;
    private javax.swing.JButton jButtonOKUnzip;
    private javax.swing.JButton jButtonOKZip;
    private javax.swing.JComboBox<String> jComboBoxAlgorithmUnzip;
    private javax.swing.JComboBox<String> jComboBoxAlgorithmZip;
    private javax.swing.JFileChooser jFileChooserDecryptKey;
    private javax.swing.JFileChooser jFileChooserDst;
    private javax.swing.JFileChooser jFileChooserFilesUnzip;
    private javax.swing.JFileChooser jFileChooserFilesZip;
    private javax.swing.JFileChooser jFileChooserKeysToExtract;
    private javax.swing.JPanel jPanelUnzip;
    private javax.swing.JPanel jPanelZip;
    private javax.swing.JPasswordField jPasswordFieldPwdZip;
    private javax.swing.JTabbedPane jTabbedPaneMain;
    private javax.swing.JTextField jTextFieldBrowseDst;
    private javax.swing.JTextField jTextFieldBrowseFileUnzip;
    private javax.swing.JTextField jTextFieldBrowseFilesZip;
    private javax.swing.JTextField jTextFieldDecryptKey;
    private javax.swing.JTextField jTextFieldDivKeysZip;
    private javax.swing.JTextField jTextFieldKeysToExtract;
    private javax.swing.JTextField jTextFieldNameZip;
    private javax.swing.JTextField jTextFieldReqKeysZip;
    private java.awt.Label labelAlgorithmUnzip;
    private java.awt.Label labelAlgorithmZip;
    private java.awt.Label labelDecryptKey;
    private java.awt.Label labelDivKeys;
    private java.awt.Label labelExtractTo;
    private java.awt.Label labelFileUnzip;
    private java.awt.Label labelFilesZip;
    private java.awt.Label labelKeysToExtract;
    private java.awt.Label labelNameZip;
    private java.awt.Label labelPwd;
    private java.awt.Label labelReqKeysZip;
    // End of variables declaration//GEN-END:variables
}
